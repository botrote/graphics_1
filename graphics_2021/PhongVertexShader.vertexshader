#version 330 core

layout(location = 0) in vec3 vPosition;
layout(location = 2) in vec3 vNormal;

// output values that will be interpolated per-fragment
out vec3 fN;
out vec3 fE;
out vec3 fL;
out vec3 fL2;

uniform mat4 ModelView;
uniform vec4 LightPosition;
uniform vec4 LightPosition2;
uniform mat4 Projection;

void main()
{
	fN = vNormal;
	fE = vec4(vPosition, 1.0).xyz;
	fL = LightPosition.xyz;
	fL2 = LightPosition2.xyz;

	vec4 pos = vec4(vPosition, 1.0);
	if( LightPosition.w != 0.0 ) {
		fL = LightPosition.xyz - pos.xyz;
	}

	if( LightPosition2.w != 0.0 ) {
		fL2 = LightPosition2.xyz - pos.xyz;
	}

	gl_Position = Projection*ModelView*pos;
}