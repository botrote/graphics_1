#version 330 core

layout(location = 0) in vec3 vPosition;
layout(location = 1) in vec2 vertexUV;
layout(location = 2) in vec3 vNormal;

// output values that will be interpolated per-fragment
out vec3 fN;
out vec3 fE;
out vec3 fL;
out vec3 fL2;
out vec2 UV;

uniform mat4 ModelView;
uniform vec4 LightPosition;
uniform vec4 LightPosition2;
uniform mat4 Projection;

void main()
{
	vec4 pos = vec4(vPosition, 1.0);

	fN = mat3(transpose(inverse(ModelView)))*vNormal;
	fE = -(ModelView * pos).xyz;
	fL = (LightPosition).xyz;
	fL2 = (LightPosition2-ModelView* pos).xyz;

	gl_Position = Projection*ModelView*pos;

	UV = vertexUV;
}